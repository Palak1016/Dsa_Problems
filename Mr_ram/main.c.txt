#include <stdio.h>
#include <stdlib.h>

int main() {
    int initial_size = 10;
    int *inventory = (int *)malloc(initial_size * sizeof(int));
    if (inventory == NULL) {
        printf("Memory allocation failed!\n");
        return 1;
    }

    for (int i = 0; i < initial_size; i++) {
        inventory[i] = i + 1;
    }


    printf("Initial inventory:\n");
    for (int i = 0; i < initial_size; i++) {
        printf("%d ", inventory[i]);
    }
    printf("\n");

    int new_size = 15;
    inventory = (int *)realloc(inventory, new_size * sizeof(int));
    if (inventory == NULL) {
        printf("Memory reallocation failed!\n");
        return 1;
    }


    for (int i = initial_size; i < new_size; i++) {
        inventory[i] = i + 1;
    }

   
    printf("Updated inventory:\n");
    for (int i = 0; i < new_size; i++) {
        printf("%d ", inventory[i]);
    }
    printf("\n");

  
    new_size = 8;
    inventory = (int *)realloc(inventory, new_size * sizeof(int));
    if (inventory == NULL) {
        printf("Memory reallocation failed!\n");
        return 1;
    }

 
    printf("Reduced inventory:\n");
    for (int i = 0; i < new_size; i++) {
        printf("%d ", inventory[i]);
    }
    printf("\n");


    free(inventory);

    return 0;
}
